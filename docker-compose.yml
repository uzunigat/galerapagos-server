version: '3.7'

services:
  app:
    build: ./
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3000:3000
    networks:
      - internal-network
    env_file:
      - .env
  app-dev:
    ports:
      - 3000:3000
    image: cosmtrek/air
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./:/app
    networks:
      - internal-network
  unit-test:
    build:
      context: ./
      target: build
    command: go test -cover -v -count=1 --tags=unit ./...
    env_file:
      - .env
    networks:
      - internal-network
  integration-test:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ./
      target: build
    command: go test -cover -v -count=1 --tags=integration ./...
    env_file:
      - .env
    networks:
      - internal-network
  db:
    image: postgres:12.7-alpine@sha256:8b4e93c283134e56936c0115e552e3dbac05f323c898b100408ed6df77f3e1b5
    environment:
      POSTGRES_DB: ${RDS_DBNAME}
      POSTGRES_USER: ${RDS_USERNAME}
      POSTGRES_PASSWORD: ${RDS_PASSWORD}
      PGPORT: ${RDS_PORT}
    ports:
      - ${RDS_PORT}:${RDS_PORT}
    networks:
      - internal-network
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      interval: 1s
      retries: 15
      test: pg_isready -d ${RDS_DBNAME} -U ${RDS_USERNAME} -p ${RDS_PORT}
networks:
  internal-network:
volumes:
  db-data:
    driver: local
